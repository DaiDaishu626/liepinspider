!function(N,undefined){if(!N||!N._tpls)return!1;var PATH=N._getCurrentScript();N._tpls[PATH]=N._tpls[PATH]||{main:function($DATA,guid){var css="",dguid=N.dguid(),template={init:function(){this.v8=!!"".trim,this.result=this.v8?"":[]},push:function(str){this.v8?this.result+=str:this.result.push(str)},html:function(){return this.v8?this.result:this.result.join("")}};return guid=guid||N.guid(),template.init(),css+="#"+guid+"{width:755px;}",css+="#"+guid+" #map{float:left;border:1px #ddd solid;}",css+="#"+guid+" .bus-line{width:240px;height:240px;margin-left:10px;float:left;}",css+="#"+guid+" .bus-line h5{padding-left:8px;margin-top:5px;border-bottom:1px #ddd solid;padding-bottom:5px;}",css+="#"+guid+" .bus-line .map_tab{}",css+="#"+guid+" .map_tab .sub-title{margin:0 5px 0 5px; position:relative; }",css+="#"+guid+" .map_tab .sub-title div.dt{font-size:12px; height:19px; position:absolute; left:25px; line-height:19px; top:0; }",css+="#"+guid+" .map_tab div.dt{background:#6788EF; border-radius:3px; color:#FFFFFF; font-size:12px; height:18px; padding:2px 8px 2px 8px; }",css+="#"+guid+" .map_tab ul{height:140px;overflow:hidden;overflow-y:auto;}",css+="#"+guid+" .map_tab ul,",css+="#"+guid+" .map_tab li{margin:5px; _margin:10px 0 10px 5px; }",css+="#"+guid+" .map_tab li{position:relative; }",css+="#"+guid+" .map_tab li .distance{position:absolute; right:0; _left:190px; _padding:0; _margin:0; top:4px; }",css+="#"+guid+" .map-ways{padding-bottom:8px;line-height:20px;}",css+="#"+guid+" .map-ways .float-left{width:38px;}",css+="#"+guid+" .map-ways .float-right{width:690px;padding-right:27px;}",N.ie6?N._fixcss(css):template.push("<style>"+css+"</style>"),template.push('<div id="'+guid+'">\n  <div class="clearfix">\n    <div id="map" style="width:'),template.push(null==($DATA.width||"240")?"":$DATA.width||"240"),template.push("px;height:"),template.push(null==($DATA.height||"240")?"":$DATA.height||"240"),template.push('px;"></div>\n    <div class="bus-line">\n      <!--<h5>公交线路列表</h5>-->\n      <div id="map_tab_jtlx" class="map_tab"></div>\n      <div id="map_tab_shxx" class="map_tab" style="background:#9C0;display:none;"></div>\n    </div>\n  </div>\n</div>'),template.push("<script>"),template.push("(function(window, document, undefined){\n"),template.push('  var $ROOT = $("#'+guid+'");\n'),template.push('  var $TPLS = NodeTpl._tpls["'+PATH+'"];\n'),template.push('  var $DATA = NodeTpl._data["'+dguid+'"];\n'),template.push('/*<p class="map-ways clearfix">\n'),template.push('      <span class="float-left">地址：</span>\n'),template.push('      <span class="float-right"><?=@address||""?></span>\n'),template.push("    </p>*/\n"),template.push("var ak = '0uC5oSrOHq4PzZz99B7PfIsj';\n"),template.push("var ____json4fe = {\n"),template.push("      xiaoqu:{\n"),template.push("        name:$DATA.name,\n"),template.push("        lon:$DATA.lng,\n"),template.push("        lat:$DATA.lat\n"),template.push("      }\n"),template.push("  };\n"),template.push("  ____json4fe.modules='finalpage';\n"),template.push("//baidu map\n"),template.push("(function(window, undefined) {\n"),template.push("  var document = window.document;\n"),template.push("  function Base64() {\n"),template.push("    // private property\n"),template.push('    //_keyStr = "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=";\n'),template.push('    _keyStr = "0uC5oSrOHq4PzZz99B7PfIsj+/=";\n'),template.push("    // public method for encoding\n"),template.push("    this.encode = function (input) {\n"),template.push('      var output = "";\n'),template.push("      var chr1, chr2, chr3, enc1, enc2, enc3, enc4;\n"),template.push("      var i = 0;\n"),template.push("      input = _utf8_encode(input);\n"),template.push("      while (i < input.length) {\n"),template.push("        chr1 = input.charCodeAt(i++);\n"),template.push("        chr2 = input.charCodeAt(i++);\n"),template.push("        chr3 = input.charCodeAt(i++);\n"),template.push("        enc1 = chr1 >> 2;\n"),template.push("        enc2 = ((chr1 & 3) << 4) | (chr2 >> 4);\n"),template.push("        enc3 = ((chr2 & 15) << 2) | (chr3 >> 6);\n"),template.push("        enc4 = chr3 & 63;\n"),template.push("        if (isNaN(chr2)) {\n"),template.push("          enc3 = enc4 = 64;\n"),template.push("        } else if (isNaN(chr3)) {\n"),template.push("          enc4 = 64;\n"),template.push("        }\n"),template.push("        output = output +\n"),template.push("        _keyStr.charAt(enc1) + _keyStr.charAt(enc2) +\n"),template.push("        _keyStr.charAt(enc3) + _keyStr.charAt(enc4);\n"),template.push("      }\n"),template.push("      return output;\n"),template.push("    };\n"),template.push("    // public method for decoding\n"),template.push("    this.decode = function (input) {\n"),template.push('      var output = "";\n'),template.push("      var chr1, chr2, chr3;\n"),template.push("      var enc1, enc2, enc3, enc4;\n"),template.push("      var i = 0;\n"),template.push('      input = input.replace(/[^A-Za-z0-9\\+\\/\\=]/g, "");\n'),template.push("      while (i < input.length) {\n"),template.push("        enc1 = _keyStr.indexOf(input.charAt(i++));\n"),template.push("        enc2 = _keyStr.indexOf(input.charAt(i++));\n"),template.push("        enc3 = _keyStr.indexOf(input.charAt(i++));\n"),template.push("        enc4 = _keyStr.indexOf(input.charAt(i++));\n"),template.push("        chr1 = (enc1 << 2) | (enc2 >> 4);\n"),template.push("        chr2 = ((enc2 & 15) << 4) | (enc3 >> 2);\n"),template.push("        chr3 = ((enc3 & 3) << 6) | enc4;\n"),template.push("        output = output + String.fromCharCode(chr1);\n"),template.push("        if (enc3 != 64) {\n"),template.push("          output = output + String.fromCharCode(chr2);\n"),template.push("        }\n"),template.push("        if (enc4 != 64) {\n"),template.push("          output = output + String.fromCharCode(chr3);\n"),template.push("        }\n"),template.push("      }\n"),template.push("      output = _utf8_decode(output);\n"),template.push("      return output;\n"),template.push("    };\n"),template.push("    // private method for UTF-8 encoding\n"),template.push("    _utf8_encode = function (string) {\n"),template.push('      string = string.replace(/\\r\\n/g,"\\n");\n'),template.push('      var utftext = "";\n'),template.push("      for (var n = 0; n < string.length; n++) {\n"),template.push("        var c = string.charCodeAt(n);\n"),template.push("        if (c < 128) {\n"),template.push("          utftext += String.fromCharCode(c);\n"),template.push("        } else if((c > 127) && (c < 2048)) {\n"),template.push("          utftext += String.fromCharCode((c >> 6) | 192);\n"),template.push("          utftext += String.fromCharCode((c & 63) | 128);\n"),template.push("        } else {\n"),template.push("          utftext += String.fromCharCode((c >> 12) | 224);\n"),template.push("          utftext += String.fromCharCode(((c >> 6) & 63) | 128);\n"),template.push("          utftext += String.fromCharCode((c & 63) | 128);\n"),template.push("        }\n"),template.push("      }\n"),template.push("      return utftext;\n"),template.push("    };\n"),template.push("    // private method for UTF-8 decoding\n"),template.push("    _utf8_decode = function (utftext) {\n"),template.push('      var string = "";\n'),template.push("      var i = 0;\n"),template.push("      var c = c1 = c2 = 0;\n"),template.push("      while ( i < utftext.length ) {\n"),template.push("        c = utftext.charCodeAt(i);\n"),template.push("        if (c < 128) {\n"),template.push("          string += String.fromCharCode(c);\n"),template.push("          i++;\n"),template.push("        } else if((c > 191) && (c < 224)) {\n"),template.push("          c2 = utftext.charCodeAt(i+1);\n"),template.push("          string += String.fromCharCode(((c & 31) << 6) | (c2 & 63));\n"),template.push("          i += 2;\n"),template.push("        } else {\n"),template.push("          c2 = utftext.charCodeAt(i+1);\n"),template.push("          c3 = utftext.charCodeAt(i+2);\n"),template.push("          string += String.fromCharCode(((c & 15) << 12) | ((c2 & 63) << 6) | (c3 & 63));\n"),template.push("          i += 3;\n"),template.push("        }\n"),template.push("      }\n"),template.push("      return string;\n"),template.push("    };\n"),template.push("  };\n"),template.push("  var fe = (function() {\n"),template.push("    var _fe = function() {\n"),template.push("      var _map, _xiaoqu={name: ____json4fe.xiaoqu.name}, _pt_center, _tempmarker,\n"),template.push("      _loadMap = function(map_name) {\n"),template.push("        _pt_center = new BMap.Point(_xiaoqu.lon, _xiaoqu.lat);\n"),template.push("        //设置中点并缩放到15级\n"),template.push("        _map.centerAndZoom(_pt_center, 16);\n"),template.push("        //增加导航控件\n"),template.push("        _map.addControl(new BMap.NavigationControl());\n"),template.push("        //增加中心点图标\n"),template.push('        _addicon("//concat.lietou-static.com/pics/pc/revs/p/beta2/images/baidu_map/markerred_b4b0471f.gif", _xiaoqu.name, _xiaoqu.lon, _xiaoqu.lat);\n'),template.push("        var circle = new BMap.Circle(\n"),template.push("            _pt_center,\n"),template.push("            1500,\n"),template.push('            {fillColor:"#A6A6A6", strokeWeight: 1 ,fillOpacity: 0.3, strokeOpacity: 0.3}\n'),template.push("          );\n"),template.push('          var ck_routefrom = _getCookie("route_from");\n'),template.push("          if (ck_routefrom) {\n"),template.push('              $("#map_route_from").val(ck_routefrom);\n'),template.push("          }\n"),template.push('          $("#map_route_to").val(_xiaoqu.name);\n'),template.push("          //点击“交通路线”\n"),template.push('          $("#dtjt_tab1").click(function() {\n'),template.push("              var self = $(this);\n"),template.push('              if (!self.hasClass("tabsel")) {\n'),template.push('                  self.addClass("tabsel");\n'),template.push('                  $("#dtjt_tab2").removeClass("tabsel");\n'),template.push('                  $("#map_tab_shxx").hide();\n'),template.push('                  $("#map_tab_jtlx").show();\n'),template.push("              }\n"),template.push("          });\n"),template.push("          //点击“生活信息”\n"),template.push('          $("#dtjt_tab2").click(function() {\n'),template.push("              var self = $(this);\n"),template.push('              if (!self.hasClass("tabsel")) {\n'),template.push('                  self.addClass("tabsel");\n'),template.push('                  $("#dtjt_tab1").removeClass("tabsel");\n'),template.push('                  $("#map_tab_jtlx").hide();\n'),template.push('                  $("#map_tab_shxx").show();\n'),template.push("              }\n"),template.push("          });\n"),template.push("          //在“起点”上按回车键\n"),template.push('          $("#map_route_from").keydown(function(e) {\n'),template.push("              if (13 == e.keyCode) {\n"),template.push("                  _search();\n"),template.push("              }\n"),template.push("          });\n"),template.push("          //按“查询路线”按钮\n"),template.push('          $("#map_route_search").click(_search);\n'),template.push("          //查找公交地铁站等等信息\n"),template.push("          var local =  new BMap.LocalSearch(_map, {renderOptions: {autoViewport: false}, onSearchComplete: _sc});\n"),template.push("          var bounds = _getSquareBounds(circle.getCenter(), circle.getRadius());\n"),template.push("          local.searchInBounds(['公交', '地铁站'], bounds);\n"),template.push("          /*local.searchInBounds(['公交', '地铁站'], {\n"),template.push("            _ne:{\n"),template.push("              lat:$DATA.lat + 0.007335,\n"),template.push("              lng:$DATA.lat + 0.009528\n"),template.push("            },\n"),template.push("            _neLat:$DATA.lat + 0.007335,\n"),template.push("            _neLng:$DATA.lat + 0.009528,\n"),template.push("            _sw:{\n"),template.push("              lat:$DATA.lat - 0.007335,\n"),template.push("              lng:$DATA.lat - 0.009528\n"),template.push("            },\n"),template.push("            _swLat:$DATA.lat - 0.007335,\n"),template.push("            _swLng:$DATA.lat - 0.009528\n"),template.push("          });*/\n"),template.push("        return true;\n"),template.push("      },\n"),template.push("      _addicon = function(url, text, lon, lat) {\n"),template.push("          var pt = new BMap.Point(lon, lat);\n"),template.push("          var myIcon = new BMap.Icon(url, new BMap.Size(20, 20));\n"),template.push("          var label = new BMap.Label(text, {offset:new BMap.Size(20,0)});\n"),template.push("          var marker = new BMap.Marker(pt,{icon:myIcon});  // 创建标注\n"),template.push("          marker.setLabel(label);\n"),template.push("          _map.addOverlay(marker);              // 将标注添加到地图中\n"),template.push("      },\n"),template.push("      _search = function() {\n"),template.push('        var from = $("#map_route_from");\n'),template.push("          var start = from.val();\n"),template.push('          var end = $("#map_route_to").val();\n'),template.push("          if (!start || !end) {\n"),template.push('              alert("请先输入起点。");\n'),template.push("              from.focus();\n"),template.push("              return;\n"),template.push("          }\n"),template.push('          if ($("#map_route_bus").attr("checked")) {\n'),template.push("              var transit = new BMap.TransitRoute(_map, {\n"),template.push("                  policy: BMAP_TRANSIT_POLICY_LEAST_TIME,\n"),template.push("                  onSearchComplete: _busresult\n"),template.push("              });\n"),template.push("              transit.search(start, _pt_center);\n"),template.push("          } else {\n"),template.push("              var transit = new BMap.DrivingRoute(_map, {\n"),template.push('                  renderOptions: {panel: "map_search_result"},\n'),template.push("                  policy: 1,\n"),template.push("                  onSearchComplete: _carresult\n"),template.push("              });\n"),template.push("              transit.search(start, end);\n"),template.push("          }\n"),template.push("      },\n"),template.push("      _getplannumber = function(plans) {\n"),template.push("        var len = plans.length;\n"),template.push("        var list = [0, 1, 2];\n"),template.push("        if (len > 1) {\n"),template.push("          if (plans[0]._duration > plans[1]._duration) {\n"),template.push("            var t = list[1];\n"),template.push("            list[1] = list[0];\n"),template.push("            list[0] = t;\n"),template.push("          }\n"),template.push("        }\n"),template.push("        if (len > 2) {\n"),template.push("          if (plans[1]._duration > plans[2]._duration) {\n"),template.push("            var t = list[2];\n"),template.push("            list[2] = list[1];\n"),template.push("            list[1] = t;\n"),template.push("          }\n"),template.push("          if (plans[0]._duration > plans[1]._duration) {\n"),template.push("            var t = list[1];\n"),template.push("            list[1] = list[0];\n"),template.push("            list[0] = t;\n"),template.push("          }\n"),template.push("        }\n"),template.push("        return list;\n"),template.push("      },\n"),template.push("      _busresult = function(results) {\n"),template.push("        var start = results.getStart();\n"),template.push("        var end = results.getEnd();\n"),template.push("        if (!start || !end) {\n"),template.push('          $("#map_search_result").hide();\n'),template.push('          alert("查询不到线路，请重新输入公交/地铁站点名称。");\n'),template.push("          return;\n"),template.push("        }\n"),template.push("        start = start.title;\n"),template.push("        end = end.title;\n"),template.push('        _setCookie("route_from", start);\n'),template.push("        var list = [];\n"),template.push("        var plan_number = _getplannumber(results._plans);\n"),template.push("        var plan_len = results._plans.length;\n"),template.push("        plan_len = (plan_len<=3) || 3;\n"),template.push('        var html = "";\n'),template.push('        var first_desc = "";\n'),template.push("        for (var i=0; i<plan_len; i++) {\n"),template.push("          var plan = results.getPlan(plan_number[i]);\n"),template.push("          if (!plan) {\n"),template.push("            continue;\n"),template.push("          }\n"),template.push("          var lines = plan._lines;\n"),template.push('          var lines_str = "";\n'),template.push("          for (var j=0; j<lines.length; j++) {\n"),template.push("            var title = lines[j].title;\n"),template.push('            lines_str += title.substr(0, title.indexOf("("));\n'),template.push("            if (j != lines.length-1) {\n"),template.push('              lines_str += " → ";\n'),template.push("            }\n"),template.push("          }\n"),template.push("          var distance = plan.getDistance();\n"),template.push("          var time = plan.getDuration();\n"),template.push("          var description = plan.getDescription();\n"),template.push('          var descs = description.split("，");\n'),template.push('          var desc = "";\n'),template.push("          var needno = true;\n"),template.push("          for (var j=0, k=1; j<descs.length; j++) {\n"),template.push("            var needbr = false;\n"),template.push('            if (descs[j].substring(0, 2)=="到达") {\n'),template.push("              needbr = true;\n"),template.push("            }\n"),template.push("            if (needno) {\n"),template.push('              desc += "　"+(k++)+"、 ";\n'),template.push("              needno = false;\n"),template.push("            }\n"),template.push("            desc += descs[j];\n"),template.push("            if (!needbr) {\n"),template.push('              desc += "，";\n'),template.push("            }\n"),template.push("            if (needbr) {\n"),template.push('              desc += "<br/>";\n'),template.push("              needno = true;\n"),template.push("            }\n"),template.push("          }\n"),template.push('          var sel_class = "";\n'),template.push("          if (0 == i) {\n"),template.push('            sel_class = " route_sel";\n'),template.push("            first_desc = desc;\n"),template.push("          }\n"),template.push('          var div1 = "<div class=\'lefttop\'>"+(i+1)+"</div>";\n'),template.push("          var div2 = \"<div class='route' start='\"+start+\"' end='\"+end+\"' desc='\"+desc+\"' onclick='LPmap.map.changeroute(this);'>\" + lines_str + \"</div>\";\n"),template.push('          var div3 = "<div class=\'distance_time\'>全程约"+time+" / 共"+distance+"</div>";\n'),template.push('          html += "<div class=\'transit_list"+sel_class+"\'>" + div1 + div2 + div3 + "</div>";\n'),template.push("        }\n"),template.push('        var div4 = "<div class=\'route_detail\'><div class=\'route_start\'>"+start+"</div>"+first_desc+"<div class=\'route_end\'>"+end+"</div></div>";\n'),template.push("        html += div4;\n"),template.push('        var msr = $("#map_search_result");\n'),template.push("        msr.html(html);\n"),template.push("          msr.show();\n"),template.push("      },\n"),template.push("      _carresult = function(results) {\n"),template.push("        var start = results.getStart();\n"),template.push("        var end = results.getEnd();\n"),template.push("        if (!start || !end) {\n"),template.push('          $("#map_search_result").hide();\n'),template.push('          alert("查询不到线路，请重新输入起点名称。");\n'),template.push("          return;\n"),template.push("        }\n"),template.push('          $("#map_search_result").show();\n'),template.push("      },\n"),template.push("      _sc = function(results) {\n"),template.push("          var list = [];//, 1, 2, 3, 4, 5, 6];\n"),template.push("          var result_len = results.length;\n"),template.push("          for (var i=0; i<result_len; i++) {\n"),template.push("              list.push([]);\n"),template.push("          }\n"),template.push("          for (var i=0; i<result_len; i++) {\n"),template.push("              var pois = results[i].wr || [];\n"),template.push("              var pois_len = pois.length;\n"),template.push("              if (0 == pois_len) {\n"),template.push("                  continue;\n"),template.push("              }\n"),template.push("              //pois_len = (pois_len<=5) || 5;   //超过5条结果的话，只取前5条。\n"),template.push("              var temp_arr = [];\n"),template.push("              for (var j=0; j<pois_len; j++) {\n"),template.push("                  var poi = pois[j];\n"),template.push("                  var title = poi.title;\n"),template.push("                  var lon = poi.point.lng;\n"),template.push("                  var lat = poi.point.lat;\n"),template.push("                  var p = new BMap.Point(lon, lat);\n"),template.push("                  var distance = _map.getDistance(_pt_center, p);\n"),template.push('                  distance = Math.floor(distance)+"米";\n'),template.push("                  /*if (1 == i) {\n"),template.push('                      var ditiezhan = title.indexOf("地铁站");\n'),template.push('                      var ditiezhandian = title.indexOf("地铁站店");  //类似“如家快捷酒店北京菜市口地铁站店”，不能算地铁站。\n'),template.push("                      if (ditiezhan<=0 || ditiezhandian>0) {\n"),template.push("                          continue;\n"),template.push("                      } else {\n"),template.push("                           title = title.substr(0, ditiezhan);\n"),template.push("                      }\n"),template.push("                  }*/\n"),template.push("                  var address = poi.address;\n"),template.push("                  if (-1 == $.inArray(title, temp_arr)) {\n"),template.push("                    temp_arr.push(title);\n"),template.push("                    list[i].push({title: title, address: address, lon: lon, lat: lat, distance: distance});\n"),template.push("                  }\n"),template.push("              }\n"),template.push("          }\n"),template.push("          if($DATA.getBusSubwayLength){\n"),template.push("            $DATA.getBusSubwayLength(list[0].length,list[1].length);\n"),template.push("            return;\n"),template.push("          }\n"),template.push("          var dts = [\n"),template.push('              {name: "附近公交站", address: 1, link: 1, icon: "//concat.lietou-static.com/pics/pc/revs/p/beta2/images/baidu_map/gongjiao_833a61e2.gif"},\n'),template.push('              {name: "附近地铁站", address: 0, link: 1, icon: "//concat.lietou-static.com/pics/pc/revs/p/beta2/images/baidu_map/ditie_73c350f5.gif"}\n'),template.push("            ];\n"),template.push('            var html1 = "";\n'),template.push('            var html2 = "";\n'),template.push("            for (var i=0, i_len=list.length; i<i_len; i++) {\n"),template.push("                var html = \"<h6 class='sub-title'><img src='\" + dts[i].icon + \"' style='margin-top:3px;'/> <div class='dt'>\" + dts[i].name + \"</div></h6><ul>\";\n"),template.push("                if(list[i].length > 0){\n"),template.push("                  for (var j=0, j_len=list[i].length; j<j_len; j++) {\n"),template.push("                    if (dts[i].link == 1) {\n"),template.push("                        html += \"<li><div style='width:180px;'><a style='color:#2255DD;font-family:Arial,​simsun,​sans-serif,​宋体; font-size:12px; line-height:20px;' title='\"+list[i][j].title+\"' address='\"+list[i][j].address+\"' lat='\"+list[i][j].lat+\"' lon='\"+list[i][j].lon+\"' icon='\"+dts[i].icon+\"' href='javascript:void(0);' onclick='LPmap.map.link(this);'>\" + list[i][j].title + \"</a></div>\";\n"),template.push("                    } else {\n"),template.push("                        if (dts[i].address == 1) {\n"),template.push('                          html += "<li><div style=\'line-height:20px;width:180px;\'>" + list[i][j].title + " <span style=\'color:#2255DD;font-family:Arial,​simsun,​sans-serif,​宋体; font-size:12px;\'>" + list[i][j].address.replace(/;/g, " ") + "</span></div>";\n'),template.push("                        } else {\n"),template.push('                          html += "<li><div style=\'line-height:20px;width:180px;\'>" + list[i][j].title + "</div>";\n'),template.push("                        }\n"),template.push("                    }\n"),template.push('                    html += "<div class=\'distance\'>" + list[i][j].distance + "</div></li>";\n'),template.push("                  }\n"),template.push("                }else{\n"),template.push("                  html += \"<li class='muted text-center'>无站点信息！</li>\";\n"),template.push("                }\n"),template.push('                html += "</ul>";\n'),template.push("                if (i<2) {\n"),template.push("                    html1 += html;\n"),template.push("                } else {\n"),template.push("                    html2 += html;\n"),template.push("                }\n"),template.push("            }\n"),template.push('            var jtlx = document.getElementById("map_tab_jtlx");\n'),template.push('            var shxx = document.getElementById("map_tab_shxx");\n'),template.push("            jtlx.innerHTML = html1;\n"),template.push("            shxx.innerHTML = html2;\n"),template.push("      },\n"),template.push("      _getSquareBounds = function(centerPoi, r){\n"),template.push("          var a = Math.sqrt(2) * r; //正方形边长\n"),template.push("          mPoi = _getMecator(centerPoi);\n"),template.push("          var x0 = mPoi.x, y0 = mPoi.y;\n"),template.push("          var x1 = x0 + a / 2 , y1 = y0 + a / 2;//东北点\n"),template.push("          var x2 = x0 - a / 2 , y2 = y0 - a / 2;//西南点\n"),template.push("          var ne = _getPoi(new BMap.Pixel(x1, y1)), sw = _getPoi(new BMap.Pixel(x2, y2));\n"),template.push("          return new BMap.Bounds(sw, ne);\n"),template.push("      },\n"),template.push("      //根据球面坐标获得平面坐标。\n"),template.push("      _getMecator = function(poi){\n"),template.push("          return _map.getMapType().getProjection().lngLatToPoint(poi);\n"),template.push("      },\n"),template.push("      //根据平面坐标获得球面坐标。\n"),template.push("      _getPoi = function(mecator){\n"),template.push("          return _map.getMapType().getProjection().pointToLngLat(mecator);\n"),template.push("      },\n"),template.push("      _getXY = function() {\n"),template.push("        _xiaoqu.lon = ____json4fe.xiaoqu.lon;\n"),template.push("        _xiaoqu.lat = ____json4fe.xiaoqu.lat;\n"),template.push("        _loadMap();\n"),template.push("      },\n"),template.push("      _setCookie = function(c_name, c_value, c_expires, c_path, c_domain, c_secure) {\n"),template.push('          var tcookie = c_name + "=" + encodeURIComponent(c_value);\n'),template.push("          if(c_expires) {\n"),template.push('              tcookie += ";expires="+c_expires.toGMTString();\n'),template.push("          } else {\n"),template.push("            var expires = new Date((new Date()).getTime() + 24 * 3600000 * 30);\n"),template.push('            tcookie += ";expires=" + expires.toGMTString();\n'),template.push("          }\n"),template.push("          if(c_path) {\n"),template.push('              tcookie += ";path="+c_path;\n'),template.push("          } else {\n"),template.push('            tcookie += ";path=/";\n'),template.push("          }\n"),template.push("          if(c_domain) {\n"),template.push('              tcookie += ";domain="+c_domain;\n'),template.push("          } else {\n"),template.push('            tcookie += ";domain=liepin.com";\n'),template.push("          }\n"),template.push("          if(c_secure) {\n"),template.push('              tcookie += ";secure";\n'),template.push("          }\n"),template.push("          document.cookie = tcookie;\n"),template.push("      },\n"),template.push("      _getCookie = function(sname) {\n"),template.push('          var value = "(?:;)?" + sname + "=([^;]*);?";\n'),template.push("          var patten = new RegExp(value);\n"),template.push("          if(patten.test(document.cookie)) {\n"),template.push("              return decodeURIComponent(RegExp['$1']);\n"),template.push("          }\n"),template.push("          else {\n"),template.push("              return null;\n"),template.push("          }\n"),template.push("      };\n"),template.push("      this.coordConvert = function(data) {\n"),template.push("        var error = data.error;\n"),template.push("        if (0 === error) {\n"),template.push("          var b = new Base64();\n"),template.push("          var x = b.decode(data.x);\n"),template.push("          var y = b.decode(data.y);\n"),template.push("          _xiaoqu.lon = parseFloat(x) + 0.005;\n"),template.push("          _xiaoqu.lat = parseFloat(y) - 0.001;\n"),template.push("          //this.getMap();\n"),template.push("          _loadMap();\n"),template.push("        }\n"),template.push("      };\n"),template.push("      this.hideMap = function() {\n"),template.push('        $("#dtjt_wrap").hide();\n'),template.push("      };\n"),template.push("      this.changeroute = function(obj) {\n"),template.push("        var o = $(obj);\n"),template.push('        $(".route").parent().removeClass("route_sel");\n'),template.push('        o.parent().addClass("route_sel");\n'),template.push('        $(".route_detail").html("<div class=\'route_start\'>"+o.attr("start")+"</div>"+o.attr("desc")+"<div class=\'route_end\'>"+o.attr("end")+"</div>");\n'),template.push("      };\n"),template.push("      this.link = function(obj) {\n"),template.push('          var icon = obj.getAttribute("icon");\n'),template.push('          var lon = obj.getAttribute("lon");\n'),template.push('          var lat = obj.getAttribute("lat");\n'),template.push('          var address = obj.getAttribute("address");\n'),template.push('          var title = obj.getAttribute("title");\n'),template.push("          var pt = new BMap.Point(lon, lat);\n"),template.push("          var myIcon = new BMap.Icon(icon, new BMap.Size(20, 20));\n"),template.push("          if (_tempmarker) {\n"),template.push("              _map.removeOverlay(_tempmarker);\n"),template.push("          }\n"),template.push("          _tempmarker = new BMap.Marker(pt, {icon:myIcon});  // 创建标注\n"),template.push("          _map.addOverlay(_tempmarker);              // 将标注添加到地图中\n"),template.push('          var infoWindow = new BMap.InfoWindow("<p style=\'font-size:14px; font-weight:900;\'>"+title+"</p><p style=\'font-size:12px;\'>地址："+address+"</p>");\n'),template.push("          _tempmarker.openInfoWindow(infoWindow);\n"),template.push('          if ("addEventListener" in window) {\n'),template.push('              _tempmarker.addEventListener("click", function(){\n'),template.push("                this.openInfoWindow(infoWindow);\n"),template.push("              });\n"),template.push("          } else {\n"),template.push('              _tempmarker["onclick"] = function() {\n'),template.push("                this.openInfoWindow(infoWindow);\n"),template.push("              }\n"),template.push("          }\n"),template.push("      };\n"),template.push("      this.init = function() {\n"),template.push('        _map = new BMap.Map("map");\n'),template.push("        this.map = _map;\n"),template.push("        _getXY();\n"),template.push("      };\n"),template.push("    };\n"),template.push("    return _fe;\n"),template.push("  }) ();\n"),template.push("  window.LPmap = window.LPmap || {};\n"),template.push("  window.LPmap.map = new fe;\n"),template.push("  // $(function() {\n"),template.push("    if (!____json4fe) {\n"),template.push("      LPmap.map.hideMap();\n"),template.push("      return;\n"),template.push("    }\n"),template.push("    if (!____json4fe.xiaoqu.lon || !____json4fe.xiaoqu.lat) {\n"),template.push("      LPmap.map.hideMap();\n"),template.push("      return;\n"),template.push("    }\n"),template.push("    //check dom\n"),template.push("    if ($('#' + ($DATA.idName || 'map')).length) {\n"),template.push("      LPmap.map.init();\n"),
template.push("    } else {\n"),template.push("      LPmap.map.hideMap();\n"),template.push("    }\n"),template.push("  //   //window.console = window.console || {log: function(){}};\n"),template.push("  // });\n"),template.push("}) (window);\n"),template.push("})(window, document);\n"),template.push('delete NodeTpl._data["'+dguid+'"];\n'),template.push("</script>\n"),$DATA&&(N._data[dguid]=$DATA),template.html()}}}(window.NodeTpl);